name: Build and Test

on:
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
          lfs: true
    - name: checkout LFS objects
      run: git lfs checkout
    - name: try git lfs pull?
      run: git lfs pull
    - name: Install libpcap
      run: sudo apt-get install libpcap-dev
    - name: Install git lfs
      run: sudo apt-get update && sudo apt-get install git-lfs && sudo git lfs install --system
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: "go.mod"
    - name: DEBUGGING git lfs 0
      run: cp test-gitconfig ~/.gitconfig
    - name: DEBUGGING git lfs 1
      run: git clone https://github.com/getlantern/fronted.git
    - name: DEBUGGING git lfs 2
      run: md5sum fronted/fronted.yaml.gz
    - name: DEBUGGING git lfs 3
      run: git config -l && cat ~/.gitconfig && GONOPROXY='github.com/getlantern/*' go mod vendor
    - name: DEBUGGING git lfs 4
      if: always()
      run: md5sum vendor/github.com/getlantern/fronted/fronted.yaml.gz
    - name: Install go go-ctrf-json-reporter
      run: go install github.com/ctrf-io/go-ctrf-json-reporter/cmd/go-ctrf-json-reporter@latest
    - name: Run tests
      run: go test -json -race -tags="headless" -coverprofile=profile.cov ./... | go-ctrf-json-reporter -output ctrf-report.json
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: ctrf-report
        path: ctrf-report.json
    - name: Publish Test Summary Results
      run: npx github-actions-ctrf ctrf-report.json
    - name: Install goveralls
      run: go install github.com/mattn/goveralls@latest
    - name: Send coverage
      env:
        COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: goveralls -coverprofile=profile.cov -service=github
