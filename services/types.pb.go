// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.3
// source: services/types.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ClientConfigRequest  is the request sent by the client that contains information about the client
// and the config it currently has.
type ClientConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientInfo *ClientConfigRequest_ClientInfo `protobuf:"bytes,1,opt,name=client_info,json=clientInfo,proto3" json:"client_info,omitempty"`
	Proxies    *ClientConfigRequest_Proxies    `protobuf:"bytes,2,opt,name=proxies,proto3" json:"proxies,omitempty"`
}

func (x *ClientConfigRequest) Reset() {
	*x = ClientConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientConfigRequest) ProtoMessage() {}

func (x *ClientConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientConfigRequest.ProtoReflect.Descriptor instead.
func (*ClientConfigRequest) Descriptor() ([]byte, []int) {
	return file_services_types_proto_rawDescGZIP(), []int{0}
}

func (x *ClientConfigRequest) GetClientInfo() *ClientConfigRequest_ClientInfo {
	if x != nil {
		return x.ClientInfo
	}
	return nil
}

func (x *ClientConfigRequest) GetProxies() *ClientConfigRequest_Proxies {
	if x != nil {
		return x.Proxies
	}
	return nil
}

// ClientConfig  is the response sent by the server that contains the updated config for the
// client.
type ClientConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProToken string                `protobuf:"bytes,1,opt,name=pro_token,json=proToken,proto3" json:"pro_token,omitempty"`
	Country  string                `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"` // country code
	Ip       string                `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`           // clients ip address
	Proxies  []*ProxyConnectConfig `protobuf:"bytes,4,rep,name=proxies,proto3" json:"proxies,omitempty"` // list of proxy configs
}

func (x *ClientConfig) Reset() {
	*x = ClientConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientConfig) ProtoMessage() {}

func (x *ClientConfig) ProtoReflect() protoreflect.Message {
	mi := &file_services_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientConfig.ProtoReflect.Descriptor instead.
func (*ClientConfig) Descriptor() ([]byte, []int) {
	return file_services_types_proto_rawDescGZIP(), []int{1}
}

func (x *ClientConfig) GetProToken() string {
	if x != nil {
		return x.ProToken
	}
	return ""
}

func (x *ClientConfig) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *ClientConfig) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ClientConfig) GetProxies() []*ProxyConnectConfig {
	if x != nil {
		return x.Proxies
	}
	return nil
}

// ProxyConnectConfig contains all the data for connecting to a given proxy.
// This message structure is used directly by clients, so any changes *must* be
// backwards compatible.
type ProxyConnectConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// addr is the proxy's public IP address.
	Addr     string                            `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Track    string                            `protobuf:"bytes,2,opt,name=track,proto3" json:"track,omitempty"`
	Location *ProxyConnectConfig_ProxyLocation `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Name     string                            `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"` // Used for logging.
	Port     int32                             `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	// General config.
	CertPem   []byte `protobuf:"bytes,10,opt,name=cert_pem,json=certPem,proto3" json:"cert_pem,omitempty"`
	AuthToken string `protobuf:"bytes,11,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	// Trusted indicates whether this proxy is "trusted". This term originates in Lantern's previous
	// infrastructure in which proxy trust was based on cloud provider - some companies operate out
	// of countries which are known to pressure or subvert domestic companies. With triangle routing,
	// however, we do not run proxies on such providers - only on back-end, wholesale providers which
	// we trust. Thus, "trust" is now based on protocol. If the proxy's protocol offers end-to-end
	// security (encryption and authentication), we consider the proxy to be trusted.
	//
	// The value of this field only affects plain-text HTTP requests sent by the client; we do not
	// send such requests through untrusted providers.
	Trusted bool `protobuf:"varint,12,opt,name=trusted,proto3" json:"trusted,omitempty"`
	// Types that are assignable to ProtocolConfig:
	//
	//	*ProxyConnectConfig_ConnectCfgTls
	//	*ProxyConnectConfig_ConnectCfgTlsmasq
	//	*ProxyConnectConfig_ConnectCfgShadowsocks
	//	*ProxyConnectConfig_ConnectCfgBroflake
	//	*ProxyConnectConfig_ConnectCfgStarbridge
	//	*ProxyConnectConfig_ConnectCfgAlgeneva
	ProtocolConfig isProxyConnectConfig_ProtocolConfig `protobuf_oneof:"protocol_config"`
}

func (x *ProxyConnectConfig) Reset() {
	*x = ProxyConnectConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyConnectConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyConnectConfig) ProtoMessage() {}

func (x *ProxyConnectConfig) ProtoReflect() protoreflect.Message {
	mi := &file_services_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyConnectConfig.ProtoReflect.Descriptor instead.
func (*ProxyConnectConfig) Descriptor() ([]byte, []int) {
	return file_services_types_proto_rawDescGZIP(), []int{2}
}

func (x *ProxyConnectConfig) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *ProxyConnectConfig) GetTrack() string {
	if x != nil {
		return x.Track
	}
	return ""
}

func (x *ProxyConnectConfig) GetLocation() *ProxyConnectConfig_ProxyLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *ProxyConnectConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProxyConnectConfig) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ProxyConnectConfig) GetCertPem() []byte {
	if x != nil {
		return x.CertPem
	}
	return nil
}

func (x *ProxyConnectConfig) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *ProxyConnectConfig) GetTrusted() bool {
	if x != nil {
		return x.Trusted
	}
	return false
}

func (m *ProxyConnectConfig) GetProtocolConfig() isProxyConnectConfig_ProtocolConfig {
	if m != nil {
		return m.ProtocolConfig
	}
	return nil
}

func (x *ProxyConnectConfig) GetConnectCfgTls() *ProxyConnectConfig_TLSConfig {
	if x, ok := x.GetProtocolConfig().(*ProxyConnectConfig_ConnectCfgTls); ok {
		return x.ConnectCfgTls
	}
	return nil
}

func (x *ProxyConnectConfig) GetConnectCfgTlsmasq() *ProxyConnectConfig_TLSMasqConfig {
	if x, ok := x.GetProtocolConfig().(*ProxyConnectConfig_ConnectCfgTlsmasq); ok {
		return x.ConnectCfgTlsmasq
	}
	return nil
}

func (x *ProxyConnectConfig) GetConnectCfgShadowsocks() *ProxyConnectConfig_ShadowsocksConfig {
	if x, ok := x.GetProtocolConfig().(*ProxyConnectConfig_ConnectCfgShadowsocks); ok {
		return x.ConnectCfgShadowsocks
	}
	return nil
}

func (x *ProxyConnectConfig) GetConnectCfgBroflake() *ProxyConnectConfig_BroflakeConfig {
	if x, ok := x.GetProtocolConfig().(*ProxyConnectConfig_ConnectCfgBroflake); ok {
		return x.ConnectCfgBroflake
	}
	return nil
}

func (x *ProxyConnectConfig) GetConnectCfgStarbridge() *ProxyConnectConfig_StarbridgeConfig {
	if x, ok := x.GetProtocolConfig().(*ProxyConnectConfig_ConnectCfgStarbridge); ok {
		return x.ConnectCfgStarbridge
	}
	return nil
}

func (x *ProxyConnectConfig) GetConnectCfgAlgeneva() *ProxyConnectConfig_AlgenevaConfig {
	if x, ok := x.GetProtocolConfig().(*ProxyConnectConfig_ConnectCfgAlgeneva); ok {
		return x.ConnectCfgAlgeneva
	}
	return nil
}

type isProxyConnectConfig_ProtocolConfig interface {
	isProxyConnectConfig_ProtocolConfig()
}

type ProxyConnectConfig_ConnectCfgTls struct {
	ConnectCfgTls *ProxyConnectConfig_TLSConfig `protobuf:"bytes,20,opt,name=connect_cfg_tls,json=connectCfgTls,proto3,oneof"`
}

type ProxyConnectConfig_ConnectCfgTlsmasq struct {
	ConnectCfgTlsmasq *ProxyConnectConfig_TLSMasqConfig `protobuf:"bytes,21,opt,name=connect_cfg_tlsmasq,json=connectCfgTlsmasq,proto3,oneof"`
}

type ProxyConnectConfig_ConnectCfgShadowsocks struct {
	ConnectCfgShadowsocks *ProxyConnectConfig_ShadowsocksConfig `protobuf:"bytes,22,opt,name=connect_cfg_shadowsocks,json=connectCfgShadowsocks,proto3,oneof"`
}

type ProxyConnectConfig_ConnectCfgBroflake struct {
	ConnectCfgBroflake *ProxyConnectConfig_BroflakeConfig `protobuf:"bytes,23,opt,name=connect_cfg_broflake,json=connectCfgBroflake,proto3,oneof"`
}

type ProxyConnectConfig_ConnectCfgStarbridge struct {
	ConnectCfgStarbridge *ProxyConnectConfig_StarbridgeConfig `protobuf:"bytes,24,opt,name=connect_cfg_starbridge,json=connectCfgStarbridge,proto3,oneof"`
}

type ProxyConnectConfig_ConnectCfgAlgeneva struct {
	ConnectCfgAlgeneva *ProxyConnectConfig_AlgenevaConfig `protobuf:"bytes,25,opt,name=connect_cfg_algeneva,json=connectCfgAlgeneva,proto3,oneof"`
}

func (*ProxyConnectConfig_ConnectCfgTls) isProxyConnectConfig_ProtocolConfig() {}

func (*ProxyConnectConfig_ConnectCfgTlsmasq) isProxyConnectConfig_ProtocolConfig() {}

func (*ProxyConnectConfig_ConnectCfgShadowsocks) isProxyConnectConfig_ProtocolConfig() {}

func (*ProxyConnectConfig_ConnectCfgBroflake) isProxyConnectConfig_ProtocolConfig() {}

func (*ProxyConnectConfig_ConnectCfgStarbridge) isProxyConnectConfig_ProtocolConfig() {}

func (*ProxyConnectConfig_ConnectCfgAlgeneva) isProxyConnectConfig_ProtocolConfig() {}

type ClientConfigRequest_ClientInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlashlightVersion string `protobuf:"bytes,1,opt,name=flashlight_version,json=flashlightVersion,proto3" json:"flashlight_version,omitempty"`
	ClientVersion     string `protobuf:"bytes,2,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	UserId            int64  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProToken          string `protobuf:"bytes,4,opt,name=pro_token,json=proToken,proto3" json:"pro_token,omitempty"`
	Country           string `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"` // country code
	Ip                string `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`           // clients ip address
}

func (x *ClientConfigRequest_ClientInfo) Reset() {
	*x = ClientConfigRequest_ClientInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientConfigRequest_ClientInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientConfigRequest_ClientInfo) ProtoMessage() {}

func (x *ClientConfigRequest_ClientInfo) ProtoReflect() protoreflect.Message {
	mi := &file_services_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientConfigRequest_ClientInfo.ProtoReflect.Descriptor instead.
func (*ClientConfigRequest_ClientInfo) Descriptor() ([]byte, []int) {
	return file_services_types_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ClientConfigRequest_ClientInfo) GetFlashlightVersion() string {
	if x != nil {
		return x.FlashlightVersion
	}
	return ""
}

func (x *ClientConfigRequest_ClientInfo) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *ClientConfigRequest_ClientInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ClientConfigRequest_ClientInfo) GetProToken() string {
	if x != nil {
		return x.ProToken
	}
	return ""
}

func (x *ClientConfigRequest_ClientInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *ClientConfigRequest_ClientInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type ClientConfigRequest_Proxies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids         []string               `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`                                    // list of proxy ids
	LastRequest *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=last_request,json=lastRequest,proto3" json:"last_request,omitempty"` // last time client requested proxy config
}

func (x *ClientConfigRequest_Proxies) Reset() {
	*x = ClientConfigRequest_Proxies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientConfigRequest_Proxies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientConfigRequest_Proxies) ProtoMessage() {}

func (x *ClientConfigRequest_Proxies) ProtoReflect() protoreflect.Message {
	mi := &file_services_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientConfigRequest_Proxies.ProtoReflect.Descriptor instead.
func (*ClientConfigRequest_Proxies) Descriptor() ([]byte, []int) {
	return file_services_types_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ClientConfigRequest_Proxies) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ClientConfigRequest_Proxies) GetLastRequest() *timestamppb.Timestamp {
	if x != nil {
		return x.LastRequest
	}
	return nil
}

type ProxyConnectConfig_ProxyLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City        string  `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	Country     string  `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	CountryCode string  `protobuf:"bytes,3,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Latitude    float32 `protobuf:"fixed32,4,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude   float32 `protobuf:"fixed32,5,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *ProxyConnectConfig_ProxyLocation) Reset() {
	*x = ProxyConnectConfig_ProxyLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyConnectConfig_ProxyLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyConnectConfig_ProxyLocation) ProtoMessage() {}

func (x *ProxyConnectConfig_ProxyLocation) ProtoReflect() protoreflect.Message {
	mi := &file_services_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyConnectConfig_ProxyLocation.ProtoReflect.Descriptor instead.
func (*ProxyConnectConfig_ProxyLocation) Descriptor() ([]byte, []int) {
	return file_services_types_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ProxyConnectConfig_ProxyLocation) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *ProxyConnectConfig_ProxyLocation) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *ProxyConnectConfig_ProxyLocation) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *ProxyConnectConfig_ProxyLocation) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *ProxyConnectConfig_ProxyLocation) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

// TLSConfig is configuration for proxies running TLS as a transport.
type ProxyConnectConfig_TLSConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionState        *ProxyConnectConfig_TLSConfig_SessionState `protobuf:"bytes,1,opt,name=session_state,json=sessionState,proto3" json:"session_state,omitempty"`
	TlsFrag             string                                     `protobuf:"bytes,2,opt,name=tls_frag,json=tlsFrag,proto3" json:"tls_frag,omitempty"`
	ServerNameIndicator string                                     `protobuf:"bytes,3,opt,name=server_name_indicator,json=serverNameIndicator,proto3" json:"server_name_indicator,omitempty"`
}

func (x *ProxyConnectConfig_TLSConfig) Reset() {
	*x = ProxyConnectConfig_TLSConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyConnectConfig_TLSConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyConnectConfig_TLSConfig) ProtoMessage() {}

func (x *ProxyConnectConfig_TLSConfig) ProtoReflect() protoreflect.Message {
	mi := &file_services_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyConnectConfig_TLSConfig.ProtoReflect.Descriptor instead.
func (*ProxyConnectConfig_TLSConfig) Descriptor() ([]byte, []int) {
	return file_services_types_proto_rawDescGZIP(), []int{2, 1}
}

func (x *ProxyConnectConfig_TLSConfig) GetSessionState() *ProxyConnectConfig_TLSConfig_SessionState {
	if x != nil {
		return x.SessionState
	}
	return nil
}

func (x *ProxyConnectConfig_TLSConfig) GetTlsFrag() string {
	if x != nil {
		return x.TlsFrag
	}
	return ""
}

func (x *ProxyConnectConfig_TLSConfig) GetServerNameIndicator() string {
	if x != nil {
		return x.ServerNameIndicator
	}
	return ""
}

type ProxyConnectConfig_TLSMasqConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginAddr string `protobuf:"bytes,1,opt,name=origin_addr,json=originAddr,proto3" json:"origin_addr,omitempty"`
	Secret     []byte `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	// TLSMinVersion is the minimum version of TLS supported by the proxy
	// server. This is represented as a hex-encoded string, like 0x0303.
	TlsMinVersion            string   `protobuf:"bytes,3,opt,name=tls_min_version,json=tlsMinVersion,proto3" json:"tls_min_version,omitempty"`
	TlsSupportedCipherSuites []string `protobuf:"bytes,4,rep,name=tls_supported_cipher_suites,json=tlsSupportedCipherSuites,proto3" json:"tls_supported_cipher_suites,omitempty"`
	TlsFrag                  string   `protobuf:"bytes,5,opt,name=tls_frag,json=tlsFrag,proto3" json:"tls_frag,omitempty"`
}

func (x *ProxyConnectConfig_TLSMasqConfig) Reset() {
	*x = ProxyConnectConfig_TLSMasqConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyConnectConfig_TLSMasqConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyConnectConfig_TLSMasqConfig) ProtoMessage() {}

func (x *ProxyConnectConfig_TLSMasqConfig) ProtoReflect() protoreflect.Message {
	mi := &file_services_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyConnectConfig_TLSMasqConfig.ProtoReflect.Descriptor instead.
func (*ProxyConnectConfig_TLSMasqConfig) Descriptor() ([]byte, []int) {
	return file_services_types_proto_rawDescGZIP(), []int{2, 2}
}

func (x *ProxyConnectConfig_TLSMasqConfig) GetOriginAddr() string {
	if x != nil {
		return x.OriginAddr
	}
	return ""
}

func (x *ProxyConnectConfig_TLSMasqConfig) GetSecret() []byte {
	if x != nil {
		return x.Secret
	}
	return nil
}

func (x *ProxyConnectConfig_TLSMasqConfig) GetTlsMinVersion() string {
	if x != nil {
		return x.TlsMinVersion
	}
	return ""
}

func (x *ProxyConnectConfig_TLSMasqConfig) GetTlsSupportedCipherSuites() []string {
	if x != nil {
		return x.TlsSupportedCipherSuites
	}
	return nil
}

func (x *ProxyConnectConfig_TLSMasqConfig) GetTlsFrag() string {
	if x != nil {
		return x.TlsFrag
	}
	return ""
}

type ProxyConnectConfig_ShadowsocksConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secret          string `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	Cipher          string `protobuf:"bytes,2,opt,name=cipher,proto3" json:"cipher,omitempty"`
	PrefixGenerator string `protobuf:"bytes,3,opt,name=prefix_generator,json=prefixGenerator,proto3" json:"prefix_generator,omitempty"`
	WithTls         bool   `protobuf:"varint,4,opt,name=with_tls,json=withTls,proto3" json:"with_tls,omitempty"`
}

func (x *ProxyConnectConfig_ShadowsocksConfig) Reset() {
	*x = ProxyConnectConfig_ShadowsocksConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyConnectConfig_ShadowsocksConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyConnectConfig_ShadowsocksConfig) ProtoMessage() {}

func (x *ProxyConnectConfig_ShadowsocksConfig) ProtoReflect() protoreflect.Message {
	mi := &file_services_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyConnectConfig_ShadowsocksConfig.ProtoReflect.Descriptor instead.
func (*ProxyConnectConfig_ShadowsocksConfig) Descriptor() ([]byte, []int) {
	return file_services_types_proto_rawDescGZIP(), []int{2, 3}
}

func (x *ProxyConnectConfig_ShadowsocksConfig) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *ProxyConnectConfig_ShadowsocksConfig) GetCipher() string {
	if x != nil {
		return x.Cipher
	}
	return ""
}

func (x *ProxyConnectConfig_ShadowsocksConfig) GetPrefixGenerator() string {
	if x != nil {
		return x.PrefixGenerator
	}
	return ""
}

func (x *ProxyConnectConfig_ShadowsocksConfig) GetWithTls() bool {
	if x != nil {
		return x.WithTls
	}
	return false
}

type ProxyConnectConfig_BroflakeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CtableSize               int32    `protobuf:"varint,1,opt,name=ctable_size,json=ctableSize,proto3" json:"ctable_size,omitempty"`
	PtableSize               int32    `protobuf:"varint,2,opt,name=ptable_size,json=ptableSize,proto3" json:"ptable_size,omitempty"`
	NatFailTimeout           int32    `protobuf:"varint,3,opt,name=nat_fail_timeout,json=natFailTimeout,proto3" json:"nat_fail_timeout,omitempty"`
	IceFailTimeout           int32    `protobuf:"varint,4,opt,name=ice_fail_timeout,json=iceFailTimeout,proto3" json:"ice_fail_timeout,omitempty"`
	DiscoverySrv             string   `protobuf:"bytes,5,opt,name=discovery_srv,json=discoverySrv,proto3" json:"discovery_srv,omitempty"`
	Endpoint                 string   `protobuf:"bytes,6,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	EgressServerName         string   `protobuf:"bytes,7,opt,name=egress_server_name,json=egressServerName,proto3" json:"egress_server_name,omitempty"`
	EgressInsecureSkipVerify bool     `protobuf:"varint,8,opt,name=egress_insecure_skip_verify,json=egressInsecureSkipVerify,proto3" json:"egress_insecure_skip_verify,omitempty"`
	EgressCa                 string   `protobuf:"bytes,9,opt,name=egress_ca,json=egressCa,proto3" json:"egress_ca,omitempty"`
	StunBatchSize            int32    `protobuf:"varint,10,opt,name=stun_batch_size,json=stunBatchSize,proto3" json:"stun_batch_size,omitempty"`
	StunServers              []string `protobuf:"bytes,11,rep,name=stun_servers,json=stunServers,proto3" json:"stun_servers,omitempty"`
}

func (x *ProxyConnectConfig_BroflakeConfig) Reset() {
	*x = ProxyConnectConfig_BroflakeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyConnectConfig_BroflakeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyConnectConfig_BroflakeConfig) ProtoMessage() {}

func (x *ProxyConnectConfig_BroflakeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_services_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyConnectConfig_BroflakeConfig.ProtoReflect.Descriptor instead.
func (*ProxyConnectConfig_BroflakeConfig) Descriptor() ([]byte, []int) {
	return file_services_types_proto_rawDescGZIP(), []int{2, 4}
}

func (x *ProxyConnectConfig_BroflakeConfig) GetCtableSize() int32 {
	if x != nil {
		return x.CtableSize
	}
	return 0
}

func (x *ProxyConnectConfig_BroflakeConfig) GetPtableSize() int32 {
	if x != nil {
		return x.PtableSize
	}
	return 0
}

func (x *ProxyConnectConfig_BroflakeConfig) GetNatFailTimeout() int32 {
	if x != nil {
		return x.NatFailTimeout
	}
	return 0
}

func (x *ProxyConnectConfig_BroflakeConfig) GetIceFailTimeout() int32 {
	if x != nil {
		return x.IceFailTimeout
	}
	return 0
}

func (x *ProxyConnectConfig_BroflakeConfig) GetDiscoverySrv() string {
	if x != nil {
		return x.DiscoverySrv
	}
	return ""
}

func (x *ProxyConnectConfig_BroflakeConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *ProxyConnectConfig_BroflakeConfig) GetEgressServerName() string {
	if x != nil {
		return x.EgressServerName
	}
	return ""
}

func (x *ProxyConnectConfig_BroflakeConfig) GetEgressInsecureSkipVerify() bool {
	if x != nil {
		return x.EgressInsecureSkipVerify
	}
	return false
}

func (x *ProxyConnectConfig_BroflakeConfig) GetEgressCa() string {
	if x != nil {
		return x.EgressCa
	}
	return ""
}

func (x *ProxyConnectConfig_BroflakeConfig) GetStunBatchSize() int32 {
	if x != nil {
		return x.StunBatchSize
	}
	return 0
}

func (x *ProxyConnectConfig_BroflakeConfig) GetStunServers() []string {
	if x != nil {
		return x.StunServers
	}
	return nil
}

type ProxyConnectConfig_StarbridgeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *ProxyConnectConfig_StarbridgeConfig) Reset() {
	*x = ProxyConnectConfig_StarbridgeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_types_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyConnectConfig_StarbridgeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyConnectConfig_StarbridgeConfig) ProtoMessage() {}

func (x *ProxyConnectConfig_StarbridgeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_services_types_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyConnectConfig_StarbridgeConfig.ProtoReflect.Descriptor instead.
func (*ProxyConnectConfig_StarbridgeConfig) Descriptor() ([]byte, []int) {
	return file_services_types_proto_rawDescGZIP(), []int{2, 5}
}

func (x *ProxyConnectConfig_StarbridgeConfig) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type ProxyConnectConfig_AlgenevaConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Strategy string `protobuf:"bytes,1,opt,name=strategy,proto3" json:"strategy,omitempty"`
}

func (x *ProxyConnectConfig_AlgenevaConfig) Reset() {
	*x = ProxyConnectConfig_AlgenevaConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_types_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyConnectConfig_AlgenevaConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyConnectConfig_AlgenevaConfig) ProtoMessage() {}

func (x *ProxyConnectConfig_AlgenevaConfig) ProtoReflect() protoreflect.Message {
	mi := &file_services_types_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyConnectConfig_AlgenevaConfig.ProtoReflect.Descriptor instead.
func (*ProxyConnectConfig_AlgenevaConfig) Descriptor() ([]byte, []int) {
	return file_services_types_proto_rawDescGZIP(), []int{2, 6}
}

func (x *ProxyConnectConfig_AlgenevaConfig) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

// SessionState represents a utls.ClientSessionState.
type ProxyConnectConfig_TLSConfig_SessionState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionTicket []byte `protobuf:"bytes,1,opt,name=session_ticket,json=sessionTicket,proto3" json:"session_ticket,omitempty"`
	Version       uint32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`                            // actually a uint16
	CipherSuite   uint32 `protobuf:"varint,3,opt,name=cipher_suite,json=cipherSuite,proto3" json:"cipher_suite,omitempty"` // actually a uint16
	MasterSecret  []byte `protobuf:"bytes,4,opt,name=master_secret,json=masterSecret,proto3" json:"master_secret,omitempty"`
}

func (x *ProxyConnectConfig_TLSConfig_SessionState) Reset() {
	*x = ProxyConnectConfig_TLSConfig_SessionState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_types_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyConnectConfig_TLSConfig_SessionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyConnectConfig_TLSConfig_SessionState) ProtoMessage() {}

func (x *ProxyConnectConfig_TLSConfig_SessionState) ProtoReflect() protoreflect.Message {
	mi := &file_services_types_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyConnectConfig_TLSConfig_SessionState.ProtoReflect.Descriptor instead.
func (*ProxyConnectConfig_TLSConfig_SessionState) Descriptor() ([]byte, []int) {
	return file_services_types_proto_rawDescGZIP(), []int{2, 1, 0}
}

func (x *ProxyConnectConfig_TLSConfig_SessionState) GetSessionTicket() []byte {
	if x != nil {
		return x.SessionTicket
	}
	return nil
}

func (x *ProxyConnectConfig_TLSConfig_SessionState) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ProxyConnectConfig_TLSConfig_SessionState) GetCipherSuite() uint32 {
	if x != nil {
		return x.CipherSuite
	}
	return 0
}

func (x *ProxyConnectConfig_TLSConfig_SessionState) GetMasterSecret() []byte {
	if x != nil {
		return x.MasterSecret
	}
	return nil
}

var File_services_types_proto protoreflect.FileDescriptor

var file_services_types_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x03, 0x0a, 0x13, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x40, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x36, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x69, 0x65, 0x73,
	0x52, 0x07, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x65, 0x73, 0x1a, 0xc2, 0x01, 0x0a, 0x0a, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x12, 0x66, 0x6c, 0x61, 0x73,
	0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x1a, 0x5a,
	0x0a, 0x07, 0x50, 0x72, 0x6f, 0x78, 0x69, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c,
	0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x0c, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x12, 0x2d, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x65,
	0x73, 0x22, 0xf7, 0x10, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x12, 0x3d, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x65, 0x72,
	0x74, 0x5f, 0x70, 0x65, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x65, 0x72,
	0x74, 0x50, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x12, 0x47, 0x0a,
	0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x66, 0x67, 0x5f, 0x74, 0x6c, 0x73,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x54, 0x4c, 0x53, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x43, 0x66, 0x67, 0x54, 0x6c, 0x73, 0x12, 0x53, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x5f, 0x63, 0x66, 0x67, 0x5f, 0x74, 0x6c, 0x73, 0x6d, 0x61, 0x73, 0x71, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x54, 0x4c, 0x53, 0x4d, 0x61, 0x73, 0x71,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x43, 0x66, 0x67, 0x54, 0x6c, 0x73, 0x6d, 0x61, 0x73, 0x71, 0x12, 0x5f, 0x0a, 0x17, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x66, 0x67, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f,
	0x77, 0x73, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x73, 0x6f, 0x63, 0x6b, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x66,
	0x67, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x73, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x56, 0x0a, 0x14,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x66, 0x67, 0x5f, 0x62, 0x72, 0x6f, 0x66,
	0x6c, 0x61, 0x6b, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x42, 0x72, 0x6f, 0x66, 0x6c, 0x61, 0x6b, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00,
	0x52, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x66, 0x67, 0x42, 0x72, 0x6f, 0x66,
	0x6c, 0x61, 0x6b, 0x65, 0x12, 0x5c, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f,
	0x63, 0x66, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x62, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x14, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x66, 0x67, 0x53, 0x74, 0x61, 0x72, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x12, 0x56, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x66,
	0x67, 0x5f, 0x61, 0x6c, 0x67, 0x65, 0x6e, 0x65, 0x76, 0x61, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41, 0x6c, 0x67, 0x65, 0x6e, 0x65, 0x76, 0x61, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43,
	0x66, 0x67, 0x41, 0x6c, 0x67, 0x65, 0x6e, 0x65, 0x76, 0x61, 0x1a, 0x9a, 0x01, 0x0a, 0x0d, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x1a, 0xc5, 0x02, 0x0a, 0x09, 0x54, 0x4c, 0x53, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4f, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x54, 0x4c, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6c, 0x73, 0x5f, 0x66, 0x72,
	0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6c, 0x73, 0x46, 0x72, 0x61,
	0x67, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x97, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x69, 0x70, 0x68, 0x65,
	0x72, 0x5f, 0x73, 0x75, 0x69, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63,
	0x69, 0x70, 0x68, 0x65, 0x72, 0x53, 0x75, 0x69, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x1a,
	0xca, 0x01, 0x0a, 0x0d, 0x54, 0x4c, 0x53, 0x4d, 0x61, 0x73, 0x71, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6c,
	0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6c, 0x73, 0x4d, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x1b, 0x74, 0x6c, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x5f, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x69, 0x74, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x18, 0x74, 0x6c, 0x73, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x53, 0x75, 0x69, 0x74, 0x65,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6c, 0x73, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6c, 0x73, 0x46, 0x72, 0x61, 0x67, 0x1a, 0x89, 0x01, 0x0a,
	0x11, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x73, 0x6f, 0x63, 0x6b, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x69,
	0x70, 0x68, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x69, 0x70, 0x68,
	0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x74, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x77, 0x69, 0x74, 0x68, 0x54, 0x6c, 0x73, 0x1a, 0xbc, 0x03, 0x0a, 0x0e, 0x42, 0x72, 0x6f,
	0x66, 0x6c, 0x61, 0x6b, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x63, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x70, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x6e, 0x61, 0x74, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6e, 0x61, 0x74, 0x46, 0x61, 0x69, 0x6c,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x63, 0x65, 0x5f, 0x66,
	0x61, 0x69, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x69, 0x63, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73,
	0x72, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x53, 0x72, 0x76, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x3d, 0x0a, 0x1b, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x65, 0x5f, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x65, 0x53, 0x6b, 0x69, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x61, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x43, 0x61, 0x12, 0x26, 0x0a, 0x0f,
	0x73, 0x74, 0x75, 0x6e, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x74, 0x75, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x75, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x75, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x1a, 0x31, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x62,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x1a, 0x2c, 0x0a, 0x0e, 0x41, 0x6c,
	0x67, 0x65, 0x6e, 0x65, 0x76, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x42, 0x11, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x2b, 0x5a, 0x29, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x6c, 0x61, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x2f, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_types_proto_rawDescOnce sync.Once
	file_services_types_proto_rawDescData = file_services_types_proto_rawDesc
)

func file_services_types_proto_rawDescGZIP() []byte {
	file_services_types_proto_rawDescOnce.Do(func() {
		file_services_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_types_proto_rawDescData)
	})
	return file_services_types_proto_rawDescData
}

var file_services_types_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_services_types_proto_goTypes = []interface{}{
	(*ClientConfigRequest)(nil),                       // 0: ClientConfigRequest
	(*ClientConfig)(nil),                              // 1: ClientConfig
	(*ProxyConnectConfig)(nil),                        // 2: ProxyConnectConfig
	(*ClientConfigRequest_ClientInfo)(nil),            // 3: ClientConfigRequest.ClientInfo
	(*ClientConfigRequest_Proxies)(nil),               // 4: ClientConfigRequest.Proxies
	(*ProxyConnectConfig_ProxyLocation)(nil),          // 5: ProxyConnectConfig.ProxyLocation
	(*ProxyConnectConfig_TLSConfig)(nil),              // 6: ProxyConnectConfig.TLSConfig
	(*ProxyConnectConfig_TLSMasqConfig)(nil),          // 7: ProxyConnectConfig.TLSMasqConfig
	(*ProxyConnectConfig_ShadowsocksConfig)(nil),      // 8: ProxyConnectConfig.ShadowsocksConfig
	(*ProxyConnectConfig_BroflakeConfig)(nil),         // 9: ProxyConnectConfig.BroflakeConfig
	(*ProxyConnectConfig_StarbridgeConfig)(nil),       // 10: ProxyConnectConfig.StarbridgeConfig
	(*ProxyConnectConfig_AlgenevaConfig)(nil),         // 11: ProxyConnectConfig.AlgenevaConfig
	(*ProxyConnectConfig_TLSConfig_SessionState)(nil), // 12: ProxyConnectConfig.TLSConfig.SessionState
	(*timestamppb.Timestamp)(nil),                     // 13: google.protobuf.Timestamp
}
var file_services_types_proto_depIdxs = []int32{
	3,  // 0: ClientConfigRequest.client_info:type_name -> ClientConfigRequest.ClientInfo
	4,  // 1: ClientConfigRequest.proxies:type_name -> ClientConfigRequest.Proxies
	2,  // 2: ClientConfig.proxies:type_name -> ProxyConnectConfig
	5,  // 3: ProxyConnectConfig.location:type_name -> ProxyConnectConfig.ProxyLocation
	6,  // 4: ProxyConnectConfig.connect_cfg_tls:type_name -> ProxyConnectConfig.TLSConfig
	7,  // 5: ProxyConnectConfig.connect_cfg_tlsmasq:type_name -> ProxyConnectConfig.TLSMasqConfig
	8,  // 6: ProxyConnectConfig.connect_cfg_shadowsocks:type_name -> ProxyConnectConfig.ShadowsocksConfig
	9,  // 7: ProxyConnectConfig.connect_cfg_broflake:type_name -> ProxyConnectConfig.BroflakeConfig
	10, // 8: ProxyConnectConfig.connect_cfg_starbridge:type_name -> ProxyConnectConfig.StarbridgeConfig
	11, // 9: ProxyConnectConfig.connect_cfg_algeneva:type_name -> ProxyConnectConfig.AlgenevaConfig
	13, // 10: ClientConfigRequest.Proxies.last_request:type_name -> google.protobuf.Timestamp
	12, // 11: ProxyConnectConfig.TLSConfig.session_state:type_name -> ProxyConnectConfig.TLSConfig.SessionState
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_services_types_proto_init() }
func file_services_types_proto_init() {
	if File_services_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyConnectConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientConfigRequest_ClientInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientConfigRequest_Proxies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyConnectConfig_ProxyLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyConnectConfig_TLSConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyConnectConfig_TLSMasqConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyConnectConfig_ShadowsocksConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyConnectConfig_BroflakeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_types_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyConnectConfig_StarbridgeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_types_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyConnectConfig_AlgenevaConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_types_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyConnectConfig_TLSConfig_SessionState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_services_types_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ProxyConnectConfig_ConnectCfgTls)(nil),
		(*ProxyConnectConfig_ConnectCfgTlsmasq)(nil),
		(*ProxyConnectConfig_ConnectCfgShadowsocks)(nil),
		(*ProxyConnectConfig_ConnectCfgBroflake)(nil),
		(*ProxyConnectConfig_ConnectCfgStarbridge)(nil),
		(*ProxyConnectConfig_ConnectCfgAlgeneva)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_types_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_services_types_proto_goTypes,
		DependencyIndexes: file_services_types_proto_depIdxs,
		MessageInfos:      file_services_types_proto_msgTypes,
	}.Build()
	File_services_types_proto = out.File
	file_services_types_proto_rawDesc = nil
	file_services_types_proto_goTypes = nil
	file_services_types_proto_depIdxs = nil
}
